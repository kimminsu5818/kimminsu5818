// 방법1

#include <iostream>
#include <fstream>
using namespace std;

void multiply5(int* x);
void squ(float* y);

int main() {
int k = 1234;
int a[] = { 1000, 2000, 3000, 4000 ,5000 };
float b[] = { -0.5, 0, 0.5 };

cout << k << endl;
for (int i = 0; i < 5; i++) multiply5(a);
cout << a[0] << " " << a[1] << " " << a[2] << " " << a[3] << " " << a[4] << endl;

for (int i = 0; i < 3; i++) squ(b);
cout << b[0] << " " << b[1] << " " << b[2] << endl;

ofstream xx;
xx.open("mybin.dat", ios::binary | ios::out);
if (!xx) {
cout << "cannot open the file!" << endl;
return 99;
}
xx.write((char*)&k, 4);
xx.write((char*)a, 20);
xx.write((char*)b, 12);
xx.close();
return 123;
}
void multiply5(int* x) {
for (int i = 0; i < 5; i++) {
x[i] = 1000 * (i + 1) * 5;
}
}

void squ(float* y) {
y[0] = pow(-0.5, 2);
y[1] = pow(0, 2);
y[2] = pow(0.5, 2);
}

// 결과1

#include<iostream>
#include<fstream>
using namespace std;

int main() {
int k;
int a[5];
float b[3];

ifstream yy;
yy.open("mybin.dat", ios::binary | ios::in);
if (!yy) {
cout << "cannot open the file!" << endl;
return 999;
}
yy.read((char*)&k, 4);
yy.read((char*)a, 20);
yy.read((char*)b, 12);
yy.close();

cout << k << endl;
for (int i = 0; i < 5; i++) cout << a[i] << " ";
cout << endl;
for (int i = 0; i < 3; i++) cout << b[i] << " ";
cout << endl;
return 0;
}

// 방법2

#include <iostream>
#include <fstream>
using namespace std;

void multi(int* a) {
	for (int i = 0; i < 5; i++)
		a[i] = 1000 * (i + 1) * 5;
}

void npow(float* a) {
	a[0] = pow(-0.5, 2);
	a[1] = pow(0, 2);
	a[2] = pow(0.5, 2);
}
int main() {
	int c1 = 1234;
	int aa[5];
	float bb[3];
	ofstream method3("mybin.dat", ios::out | ios::binary);
	if (!method3) {
		cout << " cant open the file mybin.dat" << endl;
		return 6;
	}
	method3.write((char*)&c1, sizeof(int));

	multi(aa);
	method3.write((char*)aa, sizeof(int) * 5);

	npow(bb);
	method3.write((char*)bb, sizeof(float) * 3);
	
	method3.close();
	return 0;
}

// 결과2

#include <iostream>
#include <fstream>
using namespace std;

int main() {
	ifstream method3("mybin.dat", ios::out | ios::binary);
	if (!method3) {
		cout << " cant open the file mybin.dat" << endl;
		return 6;
	}
	int c1;
	int aa[5];
	float bb[3];

	method3.read((char*)&c1, sizeof(int));
	method3.read((char*)aa, sizeof(int) * 5);
	method3.read((char*)bb, sizeof(float) * 3);
	method3.close();
	cout << c1 << endl;
	for (int i = 0; i < 5; i++) cout << aa[i] << " ";
	cout << endl;
	for (int i = 0; i < 3; i++) cout << bb[i] << " ";
	cout << endl;
	return 0;
}

// 방법3

#include <iostream>
#include <fstream>
using namespace std;

void getMul(int* a) { //배열의 주소를 갖고 옴
    for (int i = 0; i < 5; i++) a[i] = (i + 1) * 1000 * 5; //배열에 값을 저장함 
}
void getPow(float* a) {
    a[0] = pow(-0.5, 2);
    a[1] = pow(0, 2);
    a[2] = pow(0.5, 2);
}
int main() { 
    int x = 1234, int_a[5];
    float float_a[3];

    getMul(int_a);
    getPow(float_a);
    
    ofstream xxx;
    xxx.open("mybin.dat", ios::binary | ios::out);
    if (!xxx) {
        cout << "can't open the file" << endl;
        return 666;
    }
    xxx.write((char*)&x, sizeof(int));
    xxx.write((char*)int_a, sizeof(int_a));
    xxx.write((char*)float_a, sizeof(float_a));
    xxx.close();
    return 0;
}

// 결과3

#include <iostream>
#include <fstream>
using namespace std;

int main() {
    int y=0, int_x[5];
    float float_x[3];

    ifstream yyy;
    yyy.open("mybin.dat", ios::binary | ios::in);
    if (!yyy) {
        cout << "can't read the file" << endl;
        return 666;
    }
    yyy.read((char*)&y, sizeof(int));
    yyy.read((char*)int_x, sizeof(int_x));
    yyy.read((char*)float_x, sizeof(float_x));
    yyy.close();
    cout << y << endl;
    for (int i = 0; i < 5; i++) cout << int_x[i] << endl;
    for (int i = 0; i < 3; i++) cout << float_x[i] << endl;

    return 0;
}

// 방법4

#include <iostream>
#include <fstream>
using namespace std;

void getMul(int* a) { 
    for (int i = 0; i < 5; i++) a[i] = (i + 1) * 1000 * 5; 
}
void getPow(float* a) {
    a[0] = pow(-0.5, 2);
    a[1] = pow(0, 2);
    a[2] = pow(0.5, 2);
}
int All() {
    int x = 1234, int_a[5];
    float float_a[3];

    getMul(int_a);
    getPow(float_a);

    ofstream xxx;
    xxx.open("mybin111.dat", ios::binary | ios::out);
    if (!xxx) {
        cout << "can't open the file" << endl;
        return 666;
    }
    xxx.write((char*)&x, sizeof(int));
    xxx.write((char*)int_a, sizeof(int_a));
    xxx.write((char*)float_a, sizeof(float_a));
    xxx.close();

    return 0;
}

int main() {
    
    All();
    return 0;
}
