$date
	Thu Mar 27 14:44:31 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$var wire 5 ! R_adder [4:0] $end
$var wire 16 " PRODUCT_multiplier [15:0] $end
$var reg 4 # A_adder [3:0] $end
$var reg 8 $ A_multiplier [7:0] $end
$var reg 4 % B_adder [3:0] $end
$var reg 8 & B_multiplier [7:0] $end
$scope module adder_inst $end
$var wire 4 ' A [3:0] $end
$var wire 4 ( B [3:0] $end
$var wire 5 ) R [4:0] $end
$var wire 5 * C [4:0] $end
$var parameter 32 + N $end
$scope begin bit[0] $end
$var parameter 2 , i $end
$scope module fa_inst $end
$var wire 1 - a $end
$var wire 1 . b $end
$var wire 1 / ci $end
$var wire 1 0 co $end
$var wire 1 1 r $end
$upscope $end
$upscope $end
$scope begin bit[1] $end
$var parameter 2 2 i $end
$scope module fa_inst $end
$var wire 1 3 a $end
$var wire 1 4 b $end
$var wire 1 5 ci $end
$var wire 1 6 co $end
$var wire 1 7 r $end
$upscope $end
$upscope $end
$scope begin bit[2] $end
$var parameter 3 8 i $end
$scope module fa_inst $end
$var wire 1 9 a $end
$var wire 1 : b $end
$var wire 1 ; ci $end
$var wire 1 < co $end
$var wire 1 = r $end
$upscope $end
$upscope $end
$scope begin bit[3] $end
$var parameter 3 > i $end
$scope module fa_inst $end
$var wire 1 ? a $end
$var wire 1 @ b $end
$var wire 1 A ci $end
$var wire 1 B co $end
$var wire 1 C r $end
$upscope $end
$upscope $end
$upscope $end
$scope module multiplier_inst $end
$var wire 8 D A [7:0] $end
$var wire 8 E B [7:0] $end
$var wire 16 F sum_all [15:0] $end
$var wire 16 G sign_correction [15:0] $end
$var reg 16 H PRODUCT [15:0] $end
$scope begin pp[0] $end
$var parameter 2 I i $end
$upscope $end
$scope begin pp[1] $end
$var parameter 2 J i $end
$upscope $end
$scope begin pp[2] $end
$var parameter 3 K i $end
$upscope $end
$scope begin pp[3] $end
$var parameter 3 L i $end
$upscope $end
$scope begin pp[4] $end
$var parameter 4 M i $end
$upscope $end
$scope begin pp[5] $end
$var parameter 4 N i $end
$upscope $end
$scope begin pp[6] $end
$var parameter 4 O i $end
$upscope $end
$scope begin pp[7] $end
$var parameter 4 P i $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b111 P
b110 O
b101 N
b100 M
b11 L
b10 K
b1 J
b0 I
b11 >
b10 8
b1 2
b0 ,
b100 +
$end
#0
$dumpvars
b0 H
b0 G
b0 F
b0 E
b0 D
1C
0B
1A
0@
0?
0=
1<
1;
0:
19
07
16
05
14
13
11
00
0/
1.
0-
b1100 *
b1001 )
b11 (
b110 '
b0 &
b11 %
b0 $
b110 #
b0 "
b1001 !
$end
#10
1A
1<
0=
1;
15
1B
07
16
01
b11110 *
10
b10000 !
b10000 )
0C
04
1-
1?
b1 %
b1 (
b1111 #
b1111 '
#20
b1111 "
b1111 H
b1111 F
b11 &
b11 E
b101 $
b101 D
#30
b1111111111111111 "
b1111111111111111 H
b1111111100000000 G
b11111111 F
b1 &
b1 E
b11111111 $
b11111111 D
#40
b10000 "
b10000 H
b0 G
b10000 F
b10 &
b10 E
b1000 $
b1000 D
#50
b1111111111110000 "
b1111111111110000 H
b1111110000 F
b1111110000000000 G
b100 &
b100 E
b11111100 $
b11111100 D
#60
